pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REPO_NAME = 'spree-postgresql'  
        EKS_CLUSTER_NAME = 'eks-spree'  
        EKS_NAMESPACE = 'spree'  
        IMAGE_TAG = "${GIT_COMMIT}"  
        ECR_URL = "123456789012.dkr.ecr.${AWS_REGION}.amazonaws.com"  
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    
                    sh "docker build -t ${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Docker Push to ECR') {
            steps {
                script {
                    
                    sh """
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URL}
                        // Push the image to ECR
                        docker push ${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    
                    sh """
                        aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER_NAME}
                        // Update the PostgreSQL image in the Kubernetes deployment
                        kubectl set image deployment/spree-postgresql spree-postgresql=${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG} --namespace=${EKS_NAMESPACE}
                        // Ensure the PostgreSQL deployment is rolled out successfully
                        kubectl rollout status deployment/spree-postgresql --namespace=${EKS_NAMESPACE}
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
